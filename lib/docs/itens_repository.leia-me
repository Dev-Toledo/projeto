Explicação:
Método criarItem: Esse método recebe um objeto Item e insere seus dados na tabela itens_pedido do banco de dados.
Método buscarItens: Esse método retorna uma lista de todos os itens na tabela itens_pedido.
Método buscarItemPorId: Esse método busca um item específico no banco de dados, usando seu id como referência.
Método atualizarItem: Esse método atualiza um item já existente no banco de dados, usando o ID do item para localizar a linha correta.
Método deletarItem: Esse método deleta um item do banco de dados com base no ID.
Exemplo de Uso:
Criar um item: Para criar um novo item e armazená-lo no banco de dados:

Item item = Item(id: 0, nome: 'Pizza Margherita', preco: 25.50, descricao: 'Pizza com queijo e manjericão');
ItemRepository itemRepository = ItemRepository();

// Chamar o método para inserir o item
await itemRepository.criarItem(item);
Buscar todos os itens: Para buscar todos os itens armazenados no banco de dados:

List<Item> itens = await itemRepository.buscarItens();
itens.forEach((item) {
  print('Item: ${item.nome}, Preço: ${item.preco}');
});
Atualizar um item: Para atualizar um item existente:

item.preco = 30.00;  // Atualizando o preço
await itemRepository.atualizarItem(item);
Deletar um item: Para deletar um item usando seu ID:

await itemRepository.deletarItem(item.id);
Conclusão:
O repositório de itens gerencia todas as interações com o banco de dados relacionadas a itens. O método criarItem insere um novo item na tabela itens_pedido, e métodos adicionais como buscarItens, atualizarItem e deletarItem permitem gerenciar esses itens de maneira eficiente.